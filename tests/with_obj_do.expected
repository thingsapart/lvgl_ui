Error: 'with' block missing 'do' object or 'do' is not an object.
Warning: Unknown IRStmt type in free_stmt: 10
Warning: Unknown IRStmt type in free_stmt: 9
Warning: Unknown IRStmt type in free_stmt: 9
Warning: Unknown IRStmt type in free_stmt: 9
Warning: Unknown IRStmt type in free_stmt: 9
Warning: Unknown IRStmt type in free_stmt: 9
Warning: Unknown IRStmt type in free_stmt: 9
Warning: Unknown IRStmt type in free_stmt: 9
Warning: Unknown IRStmt type in free_stmt: 9
Warning: Unknown IRStmt type in free_stmt: 9
// Code generated by LVGL UI Generator

#include "lvgl.h"

// Forward declaration for any registered C pointers you might have from your application.
// Example: extern const lv_font_t my_custom_font;
void create_ui(lv_obj_t* parent) {
    {
        lv_style_t* s_style_with = (lv_style_t*)malloc(sizeof(lv_style_t));
        if (s_style_with != NULL) {
            memset(s_style_with, 0, sizeof(lv_style_t));
            lv_style_init(s_style_with);
        } else {
            fprintf(stderr, "Error: Failed to malloc for object %s of type %s\n", "s_style_with", "lv_style_t");
        }
        lv_style_set_bg_color(s_style_with, lv_color_hex(0xFF0000));
        lv_style_set_text_color(s_style_with, lv_color_hex(0x00FF00));
    }
    {
        lv_obj_t* l_label_with = lv_label_create(parent);
        lv_label_set_text(l_label_with, "Initial Text for With");
        lv_obj_set_x(l_label_with, 10);
        lv_obj_set_y(l_label_with, 10);
    }
    {
        lv_obj_t* obj_container_with = lv_obj_create(parent);
        {
            lv_obj_t* l_target_1 = lv_label_create(obj_container_with);
            lv_label_set_text(l_target_1, "Target 1");
        }
        {
            lv_obj_t* b_target_1 = lv_button_create(obj_container_with);
        }
    }
    {
        lv_obj_t* with_style_applier = lv_obj_create(parent);
        lv_style_set_bg_opa(style_for_with_test, 255);
        lv_style_set_radius(style_for_with_test, 5);
        lv_style_set_border_width(style_for_with_test, 0);
    }
    {
        lv_obj_t* with_label_modifier = lv_obj_create(parent);
        lv_label_set_text(label_for_with_test, "Updated Text via With");
        lv_label_set_long_mode(label_for_with_test, "SCROLL_CIRCULAR");
        lv_obj_set_align(label_for_with_test, "CENTER");
        lv_obj_set_x(label_for_with_test, 0);
    }
    {
        lv_obj_t* with_button_in_container_modifier = lv_obj_create(parent);
        lv_obj_set_width(target_button_1, 100);
        lv_obj_set_height(target_button_1, 50);
        lv_obj_set_align(target_button_1, "TOP_LEFT");
    }
    {
        lv_obj_t* with_null_do = lv_obj_create(parent);
    }
    {
        lv_obj_t* with_empty_do = lv_obj_create(parent);
    }
}
