DEBUG_PRINT: process_single_with_block: START with_node: {"obj":{"call":"lv_label_create","args":["@screen1"]},"do":{"text":"First With"}}, target: my_label_target, declare: 1, hint: label
DEBUG_PRINT: process_single_with_block: obj_json from with_node: {"call":"lv_label_create","args":["@screen1"]}
DEBUG_PRINT: unmarshal_value: Processing 'call' object. Function name: 'lv_label_create'
DEBUG_PRINT: unmarshal_value: 'call' lv_label_create, arg[0] JSON: "@screen1"
DEBUG_PRINT: unmarshal_value: 'call' lv_label_create, arg[0] unmarshalled to IR type: IR_EXPR_VARIABLE
DEBUG_PRINT: process_single_with_block: obj_expr unmarshalled to IR type: IR_EXPR_FUNC_CALL for target my_label_target
DEBUG_PRINT: process_single_with_block: obj_expr is func_call: lv_label_create for target my_label_target
DEBUG_PRINT: Found specific widget type 'label' for create func 'lv_label_create' (original 'lv_label_create').
DEBUG_PRINT: Using type 'label' (from obj_expr or already specific hint) for explicit target 'my_label_target' (node_widget_type_hint was 'label').
DEBUG_PRINT: process_single_with_block: Declaring var 'my_label_target' with type 'lv_obj_t*'.
DEBUG_PRINT: process_single_with_block: final target_c_var_name: 'my_label_target', temp_var_c_type: 'lv_obj_t*' for original target my_label_target
DEBUG_PRINT: unmarshal_value: String 'First With' falling back to IR_EXPR_LITERAL_STRING
DEBUG_PRINT: process_single_with_block: START with_node: {"obj":{"call":"lv_obj_get_child","args":["@screen1",0]},"do":{"long_mode":"LV_LABEL_LONG_WRAP"}}, target: my_label_target, declare: 0, hint: label
DEBUG_PRINT: process_single_with_block: obj_json from with_node: {"call":"lv_obj_get_child","args":["@screen1",0]}
DEBUG_PRINT: unmarshal_value: Processing 'call' object. Function name: 'lv_obj_get_child'
DEBUG_PRINT: unmarshal_value: 'call' lv_obj_get_child, arg[0] JSON: "@screen1"
DEBUG_PRINT: unmarshal_value: 'call' lv_obj_get_child, arg[0] unmarshalled to IR type: IR_EXPR_VARIABLE
DEBUG_PRINT: unmarshal_value: 'call' lv_obj_get_child, arg[1] JSON: 0
DEBUG_PRINT: unmarshal_value: 'call' lv_obj_get_child, arg[1] unmarshalled to IR type: IR_EXPR_LITERAL
DEBUG_PRINT: process_single_with_block: obj_expr unmarshalled to IR type: IR_EXPR_FUNC_CALL for target my_label_target
DEBUG_PRINT: process_single_with_block: obj_expr is func_call: lv_obj_get_child for target my_label_target
Info: Could not find specific widget type for func 'lv_obj_get_child' (resolved 'lv_obj_get_child'). Using general type 'obj' (from C type 'lv_obj_t*').
DEBUG_PRINT: Overriding generic type from obj_expr with node_widget_type_hint 'label' for explicit target 'my_label_target'.
DEBUG_PRINT: process_single_with_block: Assigning to existing var 'my_label_target' using ir_new_var_decl(NULL, ...).
DEBUG_PRINT: process_single_with_block: final target_c_var_name: 'my_label_target', temp_var_c_type: 'lv_obj_t*' for original target my_label_target
DEBUG_PRINT: process_single_with_block: START with_node: {"obj":{"call":"lv_btn_create","args":["@screen1"]},"do":{"width":120}}, target: my_label_target, declare: 0, hint: label
DEBUG_PRINT: process_single_with_block: obj_json from with_node: {"call":"lv_btn_create","args":["@screen1"]}
DEBUG_PRINT: unmarshal_value: Processing 'call' object. Function name: 'lv_btn_create'
DEBUG_PRINT: unmarshal_value: 'call' lv_btn_create, arg[0] JSON: "@screen1"
DEBUG_PRINT: unmarshal_value: 'call' lv_btn_create, arg[0] unmarshalled to IR type: IR_EXPR_VARIABLE
DEBUG_PRINT: process_single_with_block: obj_expr unmarshalled to IR type: IR_EXPR_FUNC_CALL for target my_label_target
DEBUG_PRINT: process_single_with_block: obj_expr is func_call: lv_btn_create for target my_label_target
DEBUG_PRINT: Resolved func alias 'lv_btn_create' to 'lv_button_create'.
DEBUG_PRINT: Found specific widget type 'button' for create func 'lv_button_create' (original 'lv_btn_create').
DEBUG_PRINT: Using type 'button' (from obj_expr or already specific hint) for explicit target 'my_label_target' (node_widget_type_hint was 'label').
DEBUG_PRINT: process_single_with_block: Assigning to existing var 'my_label_target' using ir_new_var_decl(NULL, ...).
DEBUG_PRINT: process_single_with_block: final target_c_var_name: 'my_label_target', temp_var_c_type: 'lv_obj_t*' for original target my_label_target
// Code generated by LVGL UI Generator

#include "lvgl.h"

// Forward declaration for any registered C pointers you might have from your application.
// Example: extern const lv_font_t my_custom_font;
void create_ui(lv_obj_t* parent) {
    {
        lv_obj_t* screen1 = lv_obj_create(parent);
        {
            // // Node is a 'with' assignment target. Allocation skipped for now.
            lv_obj_t* my_label_target = lv_label_create(screen1);
            lv_label_set_text(my_label_target, "First With");
            /* untyped */ my_label_target = lv_obj_get_child(screen1, 0);
            lv_label_set_long_mode(my_label_target, LV_LABEL_LONG_WRAP);
            /* untyped */ my_label_target = lv_btn_create(screen1);
            lv_obj_set_style_width(my_label_target, 120);
        }
        registry_add_pointer(ui_registry, screen1, "screen1", "obj");
    }
}
